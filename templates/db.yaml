apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "axiom.fullname" . }}-db
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "axiom.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ template "axiom.fullname" . }}-db
  serviceName: "{{ template "axiom.fullname" . }}-db"
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.db.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "axiom.fullname" . }}-db
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - {{ template "axiom.fullname" . }}-db
                topologyKey: "kubernetes.io/hostname"
      containers:
      - name: axiomdb-pod
        image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.db.image.pullPolicy }}
        ports:
        - containerPort: 8080
        resources:
          {{- toYaml .Values.db.resources | nindent 10 }}
        env:
        - name: AXIOM_ROLE
          value: ingest
        - name: AXIOM_LICENSE_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ template "axiom.fullname" . }}-secrets
              key: license-token
        - name: AXIOM_POSTGRES_PREFIX
          value: {{ .Values.postgresPrefix }}
        - name: AXIOM_POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "axiom.fullname" . }}-secrets
              key: postgres-url
        - name: AXIOM_REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "axiom.fullname" . }}-secrets
              key: redis-url
        - name: AXIOM_CACHE_REGISTRY_URL
          {{- if .Values.cacheRegistryUrl }}
          valueFrom:
            secretKeyRef:
              name: {{ template "axiom.fullname" . }}-secrets
              key: cache-registry-url
          {{- else }}
          valueFrom:
            secretKeyRef:
              name: {{ template "axiom.fullname" . }}-secrets
              key: redis-url
          {{- end }}
        {{- if .Values.lambdaUrl }}
        - name: AXIOM_FUNCTION_URL
          value: {{ .Values.lambdaUrl | quote }}
        - name: AXIOM_STREAMING_BATCH_SIZE_FUNCTION
          value: "512"
        {{- else }}
        {{- $queryFnReplicas := .Values.queryFn.replicas | toString | atoi }}
        {{- if gt $queryFnReplicas 0 }}
        - name: AXIOM_FUNCTION_URL
          value: "http://axiomdb-query-fn"
        - name: AXIOM_STREAMING_BATCH_SIZE_FUNCTION
          value: {{ .Values.queryFn.replicas | mul 8 | quote }}
        {{- end }}
        {{- end }}
        - name: AXIOM_STORAGE
          valueFrom:
            secretKeyRef:
              name: {{ template "axiom.fullname" . }}-secrets
              key: storage-uri
        {{- if .Values.storage.fallback.uri }}
        - name: AXIOM_STORAGE_FALLBACK
          valueFrom:
            secretKeyRef:
              name: {{ template "axiom.fullname" . }}-secrets
              key: fallback-storage-uri
        {{- end }}
        {{- range .Values.db.extraEnvs }}
        - name: {{ quote .name }}
          value: {{ quote .value }}
        {{- end }}
        volumeMounts:
        - name: {{ template "axiom.fullname" . }}-data
          mountPath: /axiomdb
      {{- if or .Values.imagePullSecrets .Values.imageRegistryCredentials }}
      imagePullSecrets:
        {{- if .Values.imageRegistryCredentials }}
        - name: {{ template "axiom.fullname" . }}-registry
        {{- end }}
        {{- range .Values.imagePullSecrets }}
        - name: {{ quote .name }}
        {{- end }}
      {{- end }}
      {{- with .Values.db.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.db.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- with .Values.db.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.db.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.db.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "axiom.fullname" . }}-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "{{ .Values.db.persistentVolume.size }}"
