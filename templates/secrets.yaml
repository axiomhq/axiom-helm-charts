apiVersion: v1
kind: Secret
metadata:
  name: {{ template "axiom.fullname" . }}-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "axiom.labels" . | nindent 4 }}
type: Opaque
{{- $previous := lookup "v1" "Secret" .Release.Namespace (printf "%s-secrets" (include "axiom.fullname" .)) }}
data:
  license-token: {{ .Values.licenseToken | b64enc | quote }}
  postgres-url: {{ required "Postgres URL is required!" .Values.postgresUrl | b64enc | quote }}
  redis-url: {{ .Values.redisUrl | b64enc | quote }}
  {{- if .Values.cacheRegistryUrl }}
  cache-registry-url: {{ .Values.cacheRegistryUrl | b64enc | quote }}
  {{- end }}
  email-url: {{ required "Email URL is required!" .Values.emailUrl | b64enc | quote }}
  storage-uri: {{ template "axiomStorageURI" .Values.storage.primary }}
  {{- if $previous }}
  nextauth-secret:  {{ index $previous.data "nextauth-secret" | default (randAlphaNum 40 | b64enc | quote)}}
  {{- else if .Values.nextAuthSecret }}
  nextauth-secret: {{ .Values.nextAuthSecret }}
  {{- else }}
  nextauth-secret: {{ randAlphaNum 40 | b64enc | quote }}
  {{- end }}
  login-jwt-public-key: {{ required "JWT Public Key is required" .Values.jwtPublicKey | b64enc | quote }}
  login-jwt-private-key: {{ required "JWT Private Key is required" .Values.jwtPrivateKey | b64enc | quote }}
  {{- if .Values.storage.fallback.uri }}
  fallback-storage-uri: {{ template "axiomStorageURI" .Values.storage.fallback }}
  {{- end }}
